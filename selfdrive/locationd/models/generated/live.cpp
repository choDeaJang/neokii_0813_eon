#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.8                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7089917002068737761) {
   out_7089917002068737761[0] = 0;
   out_7089917002068737761[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7089917002068737761[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7089917002068737761[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7089917002068737761[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7089917002068737761[5] = -sin(in_vec[1]);
   out_7089917002068737761[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7089917002068737761[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7089917002068737761[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7089917002068737761[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7089917002068737761[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7089917002068737761[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7089917002068737761[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7089917002068737761[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7089917002068737761[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7089917002068737761[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7089917002068737761[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7089917002068737761[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5097557166370017434) {
   out_5097557166370017434[0] = delta_x[0] + nom_x[0];
   out_5097557166370017434[1] = delta_x[1] + nom_x[1];
   out_5097557166370017434[2] = delta_x[2] + nom_x[2];
   out_5097557166370017434[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5097557166370017434[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5097557166370017434[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5097557166370017434[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5097557166370017434[7] = delta_x[6] + nom_x[7];
   out_5097557166370017434[8] = delta_x[7] + nom_x[8];
   out_5097557166370017434[9] = delta_x[8] + nom_x[9];
   out_5097557166370017434[10] = delta_x[9] + nom_x[10];
   out_5097557166370017434[11] = delta_x[10] + nom_x[11];
   out_5097557166370017434[12] = delta_x[11] + nom_x[12];
   out_5097557166370017434[13] = delta_x[12] + nom_x[13];
   out_5097557166370017434[14] = delta_x[13] + nom_x[14];
   out_5097557166370017434[15] = delta_x[14] + nom_x[15];
   out_5097557166370017434[16] = delta_x[15] + nom_x[16];
   out_5097557166370017434[17] = delta_x[16] + nom_x[17];
   out_5097557166370017434[18] = delta_x[17] + nom_x[18];
   out_5097557166370017434[19] = delta_x[18] + nom_x[19];
   out_5097557166370017434[20] = delta_x[19] + nom_x[20];
   out_5097557166370017434[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2500389703739010254) {
   out_2500389703739010254[0] = -nom_x[0] + true_x[0];
   out_2500389703739010254[1] = -nom_x[1] + true_x[1];
   out_2500389703739010254[2] = -nom_x[2] + true_x[2];
   out_2500389703739010254[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2500389703739010254[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2500389703739010254[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2500389703739010254[6] = -nom_x[7] + true_x[7];
   out_2500389703739010254[7] = -nom_x[8] + true_x[8];
   out_2500389703739010254[8] = -nom_x[9] + true_x[9];
   out_2500389703739010254[9] = -nom_x[10] + true_x[10];
   out_2500389703739010254[10] = -nom_x[11] + true_x[11];
   out_2500389703739010254[11] = -nom_x[12] + true_x[12];
   out_2500389703739010254[12] = -nom_x[13] + true_x[13];
   out_2500389703739010254[13] = -nom_x[14] + true_x[14];
   out_2500389703739010254[14] = -nom_x[15] + true_x[15];
   out_2500389703739010254[15] = -nom_x[16] + true_x[16];
   out_2500389703739010254[16] = -nom_x[17] + true_x[17];
   out_2500389703739010254[17] = -nom_x[18] + true_x[18];
   out_2500389703739010254[18] = -nom_x[19] + true_x[19];
   out_2500389703739010254[19] = -nom_x[20] + true_x[20];
   out_2500389703739010254[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8605363687855840588) {
   out_8605363687855840588[0] = 1.0;
   out_8605363687855840588[1] = 0.0;
   out_8605363687855840588[2] = 0.0;
   out_8605363687855840588[3] = 0.0;
   out_8605363687855840588[4] = 0.0;
   out_8605363687855840588[5] = 0.0;
   out_8605363687855840588[6] = 0.0;
   out_8605363687855840588[7] = 0.0;
   out_8605363687855840588[8] = 0.0;
   out_8605363687855840588[9] = 0.0;
   out_8605363687855840588[10] = 0.0;
   out_8605363687855840588[11] = 0.0;
   out_8605363687855840588[12] = 0.0;
   out_8605363687855840588[13] = 0.0;
   out_8605363687855840588[14] = 0.0;
   out_8605363687855840588[15] = 0.0;
   out_8605363687855840588[16] = 0.0;
   out_8605363687855840588[17] = 0.0;
   out_8605363687855840588[18] = 0.0;
   out_8605363687855840588[19] = 0.0;
   out_8605363687855840588[20] = 0.0;
   out_8605363687855840588[21] = 0.0;
   out_8605363687855840588[22] = 1.0;
   out_8605363687855840588[23] = 0.0;
   out_8605363687855840588[24] = 0.0;
   out_8605363687855840588[25] = 0.0;
   out_8605363687855840588[26] = 0.0;
   out_8605363687855840588[27] = 0.0;
   out_8605363687855840588[28] = 0.0;
   out_8605363687855840588[29] = 0.0;
   out_8605363687855840588[30] = 0.0;
   out_8605363687855840588[31] = 0.0;
   out_8605363687855840588[32] = 0.0;
   out_8605363687855840588[33] = 0.0;
   out_8605363687855840588[34] = 0.0;
   out_8605363687855840588[35] = 0.0;
   out_8605363687855840588[36] = 0.0;
   out_8605363687855840588[37] = 0.0;
   out_8605363687855840588[38] = 0.0;
   out_8605363687855840588[39] = 0.0;
   out_8605363687855840588[40] = 0.0;
   out_8605363687855840588[41] = 0.0;
   out_8605363687855840588[42] = 0.0;
   out_8605363687855840588[43] = 0.0;
   out_8605363687855840588[44] = 1.0;
   out_8605363687855840588[45] = 0.0;
   out_8605363687855840588[46] = 0.0;
   out_8605363687855840588[47] = 0.0;
   out_8605363687855840588[48] = 0.0;
   out_8605363687855840588[49] = 0.0;
   out_8605363687855840588[50] = 0.0;
   out_8605363687855840588[51] = 0.0;
   out_8605363687855840588[52] = 0.0;
   out_8605363687855840588[53] = 0.0;
   out_8605363687855840588[54] = 0.0;
   out_8605363687855840588[55] = 0.0;
   out_8605363687855840588[56] = 0.0;
   out_8605363687855840588[57] = 0.0;
   out_8605363687855840588[58] = 0.0;
   out_8605363687855840588[59] = 0.0;
   out_8605363687855840588[60] = 0.0;
   out_8605363687855840588[61] = 0.0;
   out_8605363687855840588[62] = 0.0;
   out_8605363687855840588[63] = 0.0;
   out_8605363687855840588[64] = 0.0;
   out_8605363687855840588[65] = 0.0;
   out_8605363687855840588[66] = -0.5*state[4];
   out_8605363687855840588[67] = -0.5*state[5];
   out_8605363687855840588[68] = -0.5*state[6];
   out_8605363687855840588[69] = 0.0;
   out_8605363687855840588[70] = 0.0;
   out_8605363687855840588[71] = 0.0;
   out_8605363687855840588[72] = 0.0;
   out_8605363687855840588[73] = 0.0;
   out_8605363687855840588[74] = 0.0;
   out_8605363687855840588[75] = 0.0;
   out_8605363687855840588[76] = 0.0;
   out_8605363687855840588[77] = 0.0;
   out_8605363687855840588[78] = 0.0;
   out_8605363687855840588[79] = 0.0;
   out_8605363687855840588[80] = 0.0;
   out_8605363687855840588[81] = 0.0;
   out_8605363687855840588[82] = 0.0;
   out_8605363687855840588[83] = 0.0;
   out_8605363687855840588[84] = 0.0;
   out_8605363687855840588[85] = 0.0;
   out_8605363687855840588[86] = 0.0;
   out_8605363687855840588[87] = 0.5*state[3];
   out_8605363687855840588[88] = 0.5*state[6];
   out_8605363687855840588[89] = -0.5*state[5];
   out_8605363687855840588[90] = 0.0;
   out_8605363687855840588[91] = 0.0;
   out_8605363687855840588[92] = 0.0;
   out_8605363687855840588[93] = 0.0;
   out_8605363687855840588[94] = 0.0;
   out_8605363687855840588[95] = 0.0;
   out_8605363687855840588[96] = 0.0;
   out_8605363687855840588[97] = 0.0;
   out_8605363687855840588[98] = 0.0;
   out_8605363687855840588[99] = 0.0;
   out_8605363687855840588[100] = 0.0;
   out_8605363687855840588[101] = 0.0;
   out_8605363687855840588[102] = 0.0;
   out_8605363687855840588[103] = 0.0;
   out_8605363687855840588[104] = 0.0;
   out_8605363687855840588[105] = 0.0;
   out_8605363687855840588[106] = 0.0;
   out_8605363687855840588[107] = 0.0;
   out_8605363687855840588[108] = -0.5*state[6];
   out_8605363687855840588[109] = 0.5*state[3];
   out_8605363687855840588[110] = 0.5*state[4];
   out_8605363687855840588[111] = 0.0;
   out_8605363687855840588[112] = 0.0;
   out_8605363687855840588[113] = 0.0;
   out_8605363687855840588[114] = 0.0;
   out_8605363687855840588[115] = 0.0;
   out_8605363687855840588[116] = 0.0;
   out_8605363687855840588[117] = 0.0;
   out_8605363687855840588[118] = 0.0;
   out_8605363687855840588[119] = 0.0;
   out_8605363687855840588[120] = 0.0;
   out_8605363687855840588[121] = 0.0;
   out_8605363687855840588[122] = 0.0;
   out_8605363687855840588[123] = 0.0;
   out_8605363687855840588[124] = 0.0;
   out_8605363687855840588[125] = 0.0;
   out_8605363687855840588[126] = 0.0;
   out_8605363687855840588[127] = 0.0;
   out_8605363687855840588[128] = 0.0;
   out_8605363687855840588[129] = 0.5*state[5];
   out_8605363687855840588[130] = -0.5*state[4];
   out_8605363687855840588[131] = 0.5*state[3];
   out_8605363687855840588[132] = 0.0;
   out_8605363687855840588[133] = 0.0;
   out_8605363687855840588[134] = 0.0;
   out_8605363687855840588[135] = 0.0;
   out_8605363687855840588[136] = 0.0;
   out_8605363687855840588[137] = 0.0;
   out_8605363687855840588[138] = 0.0;
   out_8605363687855840588[139] = 0.0;
   out_8605363687855840588[140] = 0.0;
   out_8605363687855840588[141] = 0.0;
   out_8605363687855840588[142] = 0.0;
   out_8605363687855840588[143] = 0.0;
   out_8605363687855840588[144] = 0.0;
   out_8605363687855840588[145] = 0.0;
   out_8605363687855840588[146] = 0.0;
   out_8605363687855840588[147] = 0.0;
   out_8605363687855840588[148] = 0.0;
   out_8605363687855840588[149] = 0.0;
   out_8605363687855840588[150] = 0.0;
   out_8605363687855840588[151] = 0.0;
   out_8605363687855840588[152] = 0.0;
   out_8605363687855840588[153] = 1.0;
   out_8605363687855840588[154] = 0.0;
   out_8605363687855840588[155] = 0.0;
   out_8605363687855840588[156] = 0.0;
   out_8605363687855840588[157] = 0.0;
   out_8605363687855840588[158] = 0.0;
   out_8605363687855840588[159] = 0.0;
   out_8605363687855840588[160] = 0.0;
   out_8605363687855840588[161] = 0.0;
   out_8605363687855840588[162] = 0.0;
   out_8605363687855840588[163] = 0.0;
   out_8605363687855840588[164] = 0.0;
   out_8605363687855840588[165] = 0.0;
   out_8605363687855840588[166] = 0.0;
   out_8605363687855840588[167] = 0.0;
   out_8605363687855840588[168] = 0.0;
   out_8605363687855840588[169] = 0.0;
   out_8605363687855840588[170] = 0.0;
   out_8605363687855840588[171] = 0.0;
   out_8605363687855840588[172] = 0.0;
   out_8605363687855840588[173] = 0.0;
   out_8605363687855840588[174] = 0.0;
   out_8605363687855840588[175] = 1.0;
   out_8605363687855840588[176] = 0.0;
   out_8605363687855840588[177] = 0.0;
   out_8605363687855840588[178] = 0.0;
   out_8605363687855840588[179] = 0.0;
   out_8605363687855840588[180] = 0.0;
   out_8605363687855840588[181] = 0.0;
   out_8605363687855840588[182] = 0.0;
   out_8605363687855840588[183] = 0.0;
   out_8605363687855840588[184] = 0.0;
   out_8605363687855840588[185] = 0.0;
   out_8605363687855840588[186] = 0.0;
   out_8605363687855840588[187] = 0.0;
   out_8605363687855840588[188] = 0.0;
   out_8605363687855840588[189] = 0.0;
   out_8605363687855840588[190] = 0.0;
   out_8605363687855840588[191] = 0.0;
   out_8605363687855840588[192] = 0.0;
   out_8605363687855840588[193] = 0.0;
   out_8605363687855840588[194] = 0.0;
   out_8605363687855840588[195] = 0.0;
   out_8605363687855840588[196] = 0.0;
   out_8605363687855840588[197] = 1.0;
   out_8605363687855840588[198] = 0.0;
   out_8605363687855840588[199] = 0.0;
   out_8605363687855840588[200] = 0.0;
   out_8605363687855840588[201] = 0.0;
   out_8605363687855840588[202] = 0.0;
   out_8605363687855840588[203] = 0.0;
   out_8605363687855840588[204] = 0.0;
   out_8605363687855840588[205] = 0.0;
   out_8605363687855840588[206] = 0.0;
   out_8605363687855840588[207] = 0.0;
   out_8605363687855840588[208] = 0.0;
   out_8605363687855840588[209] = 0.0;
   out_8605363687855840588[210] = 0.0;
   out_8605363687855840588[211] = 0.0;
   out_8605363687855840588[212] = 0.0;
   out_8605363687855840588[213] = 0.0;
   out_8605363687855840588[214] = 0.0;
   out_8605363687855840588[215] = 0.0;
   out_8605363687855840588[216] = 0.0;
   out_8605363687855840588[217] = 0.0;
   out_8605363687855840588[218] = 0.0;
   out_8605363687855840588[219] = 1.0;
   out_8605363687855840588[220] = 0.0;
   out_8605363687855840588[221] = 0.0;
   out_8605363687855840588[222] = 0.0;
   out_8605363687855840588[223] = 0.0;
   out_8605363687855840588[224] = 0.0;
   out_8605363687855840588[225] = 0.0;
   out_8605363687855840588[226] = 0.0;
   out_8605363687855840588[227] = 0.0;
   out_8605363687855840588[228] = 0.0;
   out_8605363687855840588[229] = 0.0;
   out_8605363687855840588[230] = 0.0;
   out_8605363687855840588[231] = 0.0;
   out_8605363687855840588[232] = 0.0;
   out_8605363687855840588[233] = 0.0;
   out_8605363687855840588[234] = 0.0;
   out_8605363687855840588[235] = 0.0;
   out_8605363687855840588[236] = 0.0;
   out_8605363687855840588[237] = 0.0;
   out_8605363687855840588[238] = 0.0;
   out_8605363687855840588[239] = 0.0;
   out_8605363687855840588[240] = 0.0;
   out_8605363687855840588[241] = 1.0;
   out_8605363687855840588[242] = 0.0;
   out_8605363687855840588[243] = 0.0;
   out_8605363687855840588[244] = 0.0;
   out_8605363687855840588[245] = 0.0;
   out_8605363687855840588[246] = 0.0;
   out_8605363687855840588[247] = 0.0;
   out_8605363687855840588[248] = 0.0;
   out_8605363687855840588[249] = 0.0;
   out_8605363687855840588[250] = 0.0;
   out_8605363687855840588[251] = 0.0;
   out_8605363687855840588[252] = 0.0;
   out_8605363687855840588[253] = 0.0;
   out_8605363687855840588[254] = 0.0;
   out_8605363687855840588[255] = 0.0;
   out_8605363687855840588[256] = 0.0;
   out_8605363687855840588[257] = 0.0;
   out_8605363687855840588[258] = 0.0;
   out_8605363687855840588[259] = 0.0;
   out_8605363687855840588[260] = 0.0;
   out_8605363687855840588[261] = 0.0;
   out_8605363687855840588[262] = 0.0;
   out_8605363687855840588[263] = 1.0;
   out_8605363687855840588[264] = 0.0;
   out_8605363687855840588[265] = 0.0;
   out_8605363687855840588[266] = 0.0;
   out_8605363687855840588[267] = 0.0;
   out_8605363687855840588[268] = 0.0;
   out_8605363687855840588[269] = 0.0;
   out_8605363687855840588[270] = 0.0;
   out_8605363687855840588[271] = 0.0;
   out_8605363687855840588[272] = 0.0;
   out_8605363687855840588[273] = 0.0;
   out_8605363687855840588[274] = 0.0;
   out_8605363687855840588[275] = 0.0;
   out_8605363687855840588[276] = 0.0;
   out_8605363687855840588[277] = 0.0;
   out_8605363687855840588[278] = 0.0;
   out_8605363687855840588[279] = 0.0;
   out_8605363687855840588[280] = 0.0;
   out_8605363687855840588[281] = 0.0;
   out_8605363687855840588[282] = 0.0;
   out_8605363687855840588[283] = 0.0;
   out_8605363687855840588[284] = 0.0;
   out_8605363687855840588[285] = 1.0;
   out_8605363687855840588[286] = 0.0;
   out_8605363687855840588[287] = 0.0;
   out_8605363687855840588[288] = 0.0;
   out_8605363687855840588[289] = 0.0;
   out_8605363687855840588[290] = 0.0;
   out_8605363687855840588[291] = 0.0;
   out_8605363687855840588[292] = 0.0;
   out_8605363687855840588[293] = 0.0;
   out_8605363687855840588[294] = 0.0;
   out_8605363687855840588[295] = 0.0;
   out_8605363687855840588[296] = 0.0;
   out_8605363687855840588[297] = 0.0;
   out_8605363687855840588[298] = 0.0;
   out_8605363687855840588[299] = 0.0;
   out_8605363687855840588[300] = 0.0;
   out_8605363687855840588[301] = 0.0;
   out_8605363687855840588[302] = 0.0;
   out_8605363687855840588[303] = 0.0;
   out_8605363687855840588[304] = 0.0;
   out_8605363687855840588[305] = 0.0;
   out_8605363687855840588[306] = 0.0;
   out_8605363687855840588[307] = 1.0;
   out_8605363687855840588[308] = 0.0;
   out_8605363687855840588[309] = 0.0;
   out_8605363687855840588[310] = 0.0;
   out_8605363687855840588[311] = 0.0;
   out_8605363687855840588[312] = 0.0;
   out_8605363687855840588[313] = 0.0;
   out_8605363687855840588[314] = 0.0;
   out_8605363687855840588[315] = 0.0;
   out_8605363687855840588[316] = 0.0;
   out_8605363687855840588[317] = 0.0;
   out_8605363687855840588[318] = 0.0;
   out_8605363687855840588[319] = 0.0;
   out_8605363687855840588[320] = 0.0;
   out_8605363687855840588[321] = 0.0;
   out_8605363687855840588[322] = 0.0;
   out_8605363687855840588[323] = 0.0;
   out_8605363687855840588[324] = 0.0;
   out_8605363687855840588[325] = 0.0;
   out_8605363687855840588[326] = 0.0;
   out_8605363687855840588[327] = 0.0;
   out_8605363687855840588[328] = 0.0;
   out_8605363687855840588[329] = 1.0;
   out_8605363687855840588[330] = 0.0;
   out_8605363687855840588[331] = 0.0;
   out_8605363687855840588[332] = 0.0;
   out_8605363687855840588[333] = 0.0;
   out_8605363687855840588[334] = 0.0;
   out_8605363687855840588[335] = 0.0;
   out_8605363687855840588[336] = 0.0;
   out_8605363687855840588[337] = 0.0;
   out_8605363687855840588[338] = 0.0;
   out_8605363687855840588[339] = 0.0;
   out_8605363687855840588[340] = 0.0;
   out_8605363687855840588[341] = 0.0;
   out_8605363687855840588[342] = 0.0;
   out_8605363687855840588[343] = 0.0;
   out_8605363687855840588[344] = 0.0;
   out_8605363687855840588[345] = 0.0;
   out_8605363687855840588[346] = 0.0;
   out_8605363687855840588[347] = 0.0;
   out_8605363687855840588[348] = 0.0;
   out_8605363687855840588[349] = 0.0;
   out_8605363687855840588[350] = 0.0;
   out_8605363687855840588[351] = 1.0;
   out_8605363687855840588[352] = 0.0;
   out_8605363687855840588[353] = 0.0;
   out_8605363687855840588[354] = 0.0;
   out_8605363687855840588[355] = 0.0;
   out_8605363687855840588[356] = 0.0;
   out_8605363687855840588[357] = 0.0;
   out_8605363687855840588[358] = 0.0;
   out_8605363687855840588[359] = 0.0;
   out_8605363687855840588[360] = 0.0;
   out_8605363687855840588[361] = 0.0;
   out_8605363687855840588[362] = 0.0;
   out_8605363687855840588[363] = 0.0;
   out_8605363687855840588[364] = 0.0;
   out_8605363687855840588[365] = 0.0;
   out_8605363687855840588[366] = 0.0;
   out_8605363687855840588[367] = 0.0;
   out_8605363687855840588[368] = 0.0;
   out_8605363687855840588[369] = 0.0;
   out_8605363687855840588[370] = 0.0;
   out_8605363687855840588[371] = 0.0;
   out_8605363687855840588[372] = 0.0;
   out_8605363687855840588[373] = 1.0;
   out_8605363687855840588[374] = 0.0;
   out_8605363687855840588[375] = 0.0;
   out_8605363687855840588[376] = 0.0;
   out_8605363687855840588[377] = 0.0;
   out_8605363687855840588[378] = 0.0;
   out_8605363687855840588[379] = 0.0;
   out_8605363687855840588[380] = 0.0;
   out_8605363687855840588[381] = 0.0;
   out_8605363687855840588[382] = 0.0;
   out_8605363687855840588[383] = 0.0;
   out_8605363687855840588[384] = 0.0;
   out_8605363687855840588[385] = 0.0;
   out_8605363687855840588[386] = 0.0;
   out_8605363687855840588[387] = 0.0;
   out_8605363687855840588[388] = 0.0;
   out_8605363687855840588[389] = 0.0;
   out_8605363687855840588[390] = 0.0;
   out_8605363687855840588[391] = 0.0;
   out_8605363687855840588[392] = 0.0;
   out_8605363687855840588[393] = 0.0;
   out_8605363687855840588[394] = 0.0;
   out_8605363687855840588[395] = 1.0;
   out_8605363687855840588[396] = 0.0;
   out_8605363687855840588[397] = 0.0;
   out_8605363687855840588[398] = 0.0;
   out_8605363687855840588[399] = 0.0;
   out_8605363687855840588[400] = 0.0;
   out_8605363687855840588[401] = 0.0;
   out_8605363687855840588[402] = 0.0;
   out_8605363687855840588[403] = 0.0;
   out_8605363687855840588[404] = 0.0;
   out_8605363687855840588[405] = 0.0;
   out_8605363687855840588[406] = 0.0;
   out_8605363687855840588[407] = 0.0;
   out_8605363687855840588[408] = 0.0;
   out_8605363687855840588[409] = 0.0;
   out_8605363687855840588[410] = 0.0;
   out_8605363687855840588[411] = 0.0;
   out_8605363687855840588[412] = 0.0;
   out_8605363687855840588[413] = 0.0;
   out_8605363687855840588[414] = 0.0;
   out_8605363687855840588[415] = 0.0;
   out_8605363687855840588[416] = 0.0;
   out_8605363687855840588[417] = 1.0;
   out_8605363687855840588[418] = 0.0;
   out_8605363687855840588[419] = 0.0;
   out_8605363687855840588[420] = 0.0;
   out_8605363687855840588[421] = 0.0;
   out_8605363687855840588[422] = 0.0;
   out_8605363687855840588[423] = 0.0;
   out_8605363687855840588[424] = 0.0;
   out_8605363687855840588[425] = 0.0;
   out_8605363687855840588[426] = 0.0;
   out_8605363687855840588[427] = 0.0;
   out_8605363687855840588[428] = 0.0;
   out_8605363687855840588[429] = 0.0;
   out_8605363687855840588[430] = 0.0;
   out_8605363687855840588[431] = 0.0;
   out_8605363687855840588[432] = 0.0;
   out_8605363687855840588[433] = 0.0;
   out_8605363687855840588[434] = 0.0;
   out_8605363687855840588[435] = 0.0;
   out_8605363687855840588[436] = 0.0;
   out_8605363687855840588[437] = 0.0;
   out_8605363687855840588[438] = 0.0;
   out_8605363687855840588[439] = 1.0;
   out_8605363687855840588[440] = 0.0;
   out_8605363687855840588[441] = 0.0;
   out_8605363687855840588[442] = 0.0;
   out_8605363687855840588[443] = 0.0;
   out_8605363687855840588[444] = 0.0;
   out_8605363687855840588[445] = 0.0;
   out_8605363687855840588[446] = 0.0;
   out_8605363687855840588[447] = 0.0;
   out_8605363687855840588[448] = 0.0;
   out_8605363687855840588[449] = 0.0;
   out_8605363687855840588[450] = 0.0;
   out_8605363687855840588[451] = 0.0;
   out_8605363687855840588[452] = 0.0;
   out_8605363687855840588[453] = 0.0;
   out_8605363687855840588[454] = 0.0;
   out_8605363687855840588[455] = 0.0;
   out_8605363687855840588[456] = 0.0;
   out_8605363687855840588[457] = 0.0;
   out_8605363687855840588[458] = 0.0;
   out_8605363687855840588[459] = 0.0;
   out_8605363687855840588[460] = 0.0;
   out_8605363687855840588[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7196605423571964472) {
   out_7196605423571964472[0] = dt*state[7] + state[0];
   out_7196605423571964472[1] = dt*state[8] + state[1];
   out_7196605423571964472[2] = dt*state[9] + state[2];
   out_7196605423571964472[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7196605423571964472[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7196605423571964472[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7196605423571964472[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7196605423571964472[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7196605423571964472[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7196605423571964472[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7196605423571964472[10] = state[10];
   out_7196605423571964472[11] = state[11];
   out_7196605423571964472[12] = state[12];
   out_7196605423571964472[13] = state[13];
   out_7196605423571964472[14] = state[14];
   out_7196605423571964472[15] = state[15];
   out_7196605423571964472[16] = state[16];
   out_7196605423571964472[17] = state[17];
   out_7196605423571964472[18] = state[18];
   out_7196605423571964472[19] = state[19];
   out_7196605423571964472[20] = state[20];
   out_7196605423571964472[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5329286583971009738) {
   out_5329286583971009738[0] = 1;
   out_5329286583971009738[1] = 0;
   out_5329286583971009738[2] = 0;
   out_5329286583971009738[3] = 0;
   out_5329286583971009738[4] = 0;
   out_5329286583971009738[5] = 0;
   out_5329286583971009738[6] = dt;
   out_5329286583971009738[7] = 0;
   out_5329286583971009738[8] = 0;
   out_5329286583971009738[9] = 0;
   out_5329286583971009738[10] = 0;
   out_5329286583971009738[11] = 0;
   out_5329286583971009738[12] = 0;
   out_5329286583971009738[13] = 0;
   out_5329286583971009738[14] = 0;
   out_5329286583971009738[15] = 0;
   out_5329286583971009738[16] = 0;
   out_5329286583971009738[17] = 0;
   out_5329286583971009738[18] = 0;
   out_5329286583971009738[19] = 0;
   out_5329286583971009738[20] = 0;
   out_5329286583971009738[21] = 0;
   out_5329286583971009738[22] = 1;
   out_5329286583971009738[23] = 0;
   out_5329286583971009738[24] = 0;
   out_5329286583971009738[25] = 0;
   out_5329286583971009738[26] = 0;
   out_5329286583971009738[27] = 0;
   out_5329286583971009738[28] = dt;
   out_5329286583971009738[29] = 0;
   out_5329286583971009738[30] = 0;
   out_5329286583971009738[31] = 0;
   out_5329286583971009738[32] = 0;
   out_5329286583971009738[33] = 0;
   out_5329286583971009738[34] = 0;
   out_5329286583971009738[35] = 0;
   out_5329286583971009738[36] = 0;
   out_5329286583971009738[37] = 0;
   out_5329286583971009738[38] = 0;
   out_5329286583971009738[39] = 0;
   out_5329286583971009738[40] = 0;
   out_5329286583971009738[41] = 0;
   out_5329286583971009738[42] = 0;
   out_5329286583971009738[43] = 0;
   out_5329286583971009738[44] = 1;
   out_5329286583971009738[45] = 0;
   out_5329286583971009738[46] = 0;
   out_5329286583971009738[47] = 0;
   out_5329286583971009738[48] = 0;
   out_5329286583971009738[49] = 0;
   out_5329286583971009738[50] = dt;
   out_5329286583971009738[51] = 0;
   out_5329286583971009738[52] = 0;
   out_5329286583971009738[53] = 0;
   out_5329286583971009738[54] = 0;
   out_5329286583971009738[55] = 0;
   out_5329286583971009738[56] = 0;
   out_5329286583971009738[57] = 0;
   out_5329286583971009738[58] = 0;
   out_5329286583971009738[59] = 0;
   out_5329286583971009738[60] = 0;
   out_5329286583971009738[61] = 0;
   out_5329286583971009738[62] = 0;
   out_5329286583971009738[63] = 0;
   out_5329286583971009738[64] = 0;
   out_5329286583971009738[65] = 0;
   out_5329286583971009738[66] = 1;
   out_5329286583971009738[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5329286583971009738[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5329286583971009738[69] = 0;
   out_5329286583971009738[70] = 0;
   out_5329286583971009738[71] = 0;
   out_5329286583971009738[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5329286583971009738[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5329286583971009738[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5329286583971009738[75] = 0;
   out_5329286583971009738[76] = 0;
   out_5329286583971009738[77] = 0;
   out_5329286583971009738[78] = 0;
   out_5329286583971009738[79] = 0;
   out_5329286583971009738[80] = 0;
   out_5329286583971009738[81] = 0;
   out_5329286583971009738[82] = 0;
   out_5329286583971009738[83] = 0;
   out_5329286583971009738[84] = 0;
   out_5329286583971009738[85] = 0;
   out_5329286583971009738[86] = 0;
   out_5329286583971009738[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5329286583971009738[88] = 1;
   out_5329286583971009738[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5329286583971009738[90] = 0;
   out_5329286583971009738[91] = 0;
   out_5329286583971009738[92] = 0;
   out_5329286583971009738[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5329286583971009738[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5329286583971009738[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5329286583971009738[96] = 0;
   out_5329286583971009738[97] = 0;
   out_5329286583971009738[98] = 0;
   out_5329286583971009738[99] = 0;
   out_5329286583971009738[100] = 0;
   out_5329286583971009738[101] = 0;
   out_5329286583971009738[102] = 0;
   out_5329286583971009738[103] = 0;
   out_5329286583971009738[104] = 0;
   out_5329286583971009738[105] = 0;
   out_5329286583971009738[106] = 0;
   out_5329286583971009738[107] = 0;
   out_5329286583971009738[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5329286583971009738[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5329286583971009738[110] = 1;
   out_5329286583971009738[111] = 0;
   out_5329286583971009738[112] = 0;
   out_5329286583971009738[113] = 0;
   out_5329286583971009738[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5329286583971009738[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5329286583971009738[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5329286583971009738[117] = 0;
   out_5329286583971009738[118] = 0;
   out_5329286583971009738[119] = 0;
   out_5329286583971009738[120] = 0;
   out_5329286583971009738[121] = 0;
   out_5329286583971009738[122] = 0;
   out_5329286583971009738[123] = 0;
   out_5329286583971009738[124] = 0;
   out_5329286583971009738[125] = 0;
   out_5329286583971009738[126] = 0;
   out_5329286583971009738[127] = 0;
   out_5329286583971009738[128] = 0;
   out_5329286583971009738[129] = 0;
   out_5329286583971009738[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5329286583971009738[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5329286583971009738[132] = 1;
   out_5329286583971009738[133] = 0;
   out_5329286583971009738[134] = 0;
   out_5329286583971009738[135] = 0;
   out_5329286583971009738[136] = 0;
   out_5329286583971009738[137] = 0;
   out_5329286583971009738[138] = 0;
   out_5329286583971009738[139] = 0;
   out_5329286583971009738[140] = 0;
   out_5329286583971009738[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5329286583971009738[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5329286583971009738[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5329286583971009738[144] = 0;
   out_5329286583971009738[145] = 0;
   out_5329286583971009738[146] = 0;
   out_5329286583971009738[147] = 0;
   out_5329286583971009738[148] = 0;
   out_5329286583971009738[149] = 0;
   out_5329286583971009738[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5329286583971009738[151] = 0;
   out_5329286583971009738[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5329286583971009738[153] = 0;
   out_5329286583971009738[154] = 1;
   out_5329286583971009738[155] = 0;
   out_5329286583971009738[156] = 0;
   out_5329286583971009738[157] = 0;
   out_5329286583971009738[158] = 0;
   out_5329286583971009738[159] = 0;
   out_5329286583971009738[160] = 0;
   out_5329286583971009738[161] = 0;
   out_5329286583971009738[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5329286583971009738[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5329286583971009738[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5329286583971009738[165] = 0;
   out_5329286583971009738[166] = 0;
   out_5329286583971009738[167] = 0;
   out_5329286583971009738[168] = 0;
   out_5329286583971009738[169] = 0;
   out_5329286583971009738[170] = 0;
   out_5329286583971009738[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5329286583971009738[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5329286583971009738[173] = 0;
   out_5329286583971009738[174] = 0;
   out_5329286583971009738[175] = 0;
   out_5329286583971009738[176] = 1;
   out_5329286583971009738[177] = 0;
   out_5329286583971009738[178] = 0;
   out_5329286583971009738[179] = 0;
   out_5329286583971009738[180] = 0;
   out_5329286583971009738[181] = 0;
   out_5329286583971009738[182] = 0;
   out_5329286583971009738[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5329286583971009738[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5329286583971009738[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5329286583971009738[186] = 0;
   out_5329286583971009738[187] = 0;
   out_5329286583971009738[188] = 0;
   out_5329286583971009738[189] = 0;
   out_5329286583971009738[190] = 0;
   out_5329286583971009738[191] = 0;
   out_5329286583971009738[192] = 0;
   out_5329286583971009738[193] = 0;
   out_5329286583971009738[194] = 0;
   out_5329286583971009738[195] = 0;
   out_5329286583971009738[196] = 0;
   out_5329286583971009738[197] = 0;
   out_5329286583971009738[198] = 1;
   out_5329286583971009738[199] = 0;
   out_5329286583971009738[200] = 0;
   out_5329286583971009738[201] = 0;
   out_5329286583971009738[202] = 0;
   out_5329286583971009738[203] = 0;
   out_5329286583971009738[204] = 0;
   out_5329286583971009738[205] = 0;
   out_5329286583971009738[206] = 0;
   out_5329286583971009738[207] = 0;
   out_5329286583971009738[208] = 0;
   out_5329286583971009738[209] = 0;
   out_5329286583971009738[210] = 0;
   out_5329286583971009738[211] = 0;
   out_5329286583971009738[212] = 0;
   out_5329286583971009738[213] = 0;
   out_5329286583971009738[214] = 0;
   out_5329286583971009738[215] = 0;
   out_5329286583971009738[216] = 0;
   out_5329286583971009738[217] = 0;
   out_5329286583971009738[218] = 0;
   out_5329286583971009738[219] = 0;
   out_5329286583971009738[220] = 1;
   out_5329286583971009738[221] = 0;
   out_5329286583971009738[222] = 0;
   out_5329286583971009738[223] = 0;
   out_5329286583971009738[224] = 0;
   out_5329286583971009738[225] = 0;
   out_5329286583971009738[226] = 0;
   out_5329286583971009738[227] = 0;
   out_5329286583971009738[228] = 0;
   out_5329286583971009738[229] = 0;
   out_5329286583971009738[230] = 0;
   out_5329286583971009738[231] = 0;
   out_5329286583971009738[232] = 0;
   out_5329286583971009738[233] = 0;
   out_5329286583971009738[234] = 0;
   out_5329286583971009738[235] = 0;
   out_5329286583971009738[236] = 0;
   out_5329286583971009738[237] = 0;
   out_5329286583971009738[238] = 0;
   out_5329286583971009738[239] = 0;
   out_5329286583971009738[240] = 0;
   out_5329286583971009738[241] = 0;
   out_5329286583971009738[242] = 1;
   out_5329286583971009738[243] = 0;
   out_5329286583971009738[244] = 0;
   out_5329286583971009738[245] = 0;
   out_5329286583971009738[246] = 0;
   out_5329286583971009738[247] = 0;
   out_5329286583971009738[248] = 0;
   out_5329286583971009738[249] = 0;
   out_5329286583971009738[250] = 0;
   out_5329286583971009738[251] = 0;
   out_5329286583971009738[252] = 0;
   out_5329286583971009738[253] = 0;
   out_5329286583971009738[254] = 0;
   out_5329286583971009738[255] = 0;
   out_5329286583971009738[256] = 0;
   out_5329286583971009738[257] = 0;
   out_5329286583971009738[258] = 0;
   out_5329286583971009738[259] = 0;
   out_5329286583971009738[260] = 0;
   out_5329286583971009738[261] = 0;
   out_5329286583971009738[262] = 0;
   out_5329286583971009738[263] = 0;
   out_5329286583971009738[264] = 1;
   out_5329286583971009738[265] = 0;
   out_5329286583971009738[266] = 0;
   out_5329286583971009738[267] = 0;
   out_5329286583971009738[268] = 0;
   out_5329286583971009738[269] = 0;
   out_5329286583971009738[270] = 0;
   out_5329286583971009738[271] = 0;
   out_5329286583971009738[272] = 0;
   out_5329286583971009738[273] = 0;
   out_5329286583971009738[274] = 0;
   out_5329286583971009738[275] = 0;
   out_5329286583971009738[276] = 0;
   out_5329286583971009738[277] = 0;
   out_5329286583971009738[278] = 0;
   out_5329286583971009738[279] = 0;
   out_5329286583971009738[280] = 0;
   out_5329286583971009738[281] = 0;
   out_5329286583971009738[282] = 0;
   out_5329286583971009738[283] = 0;
   out_5329286583971009738[284] = 0;
   out_5329286583971009738[285] = 0;
   out_5329286583971009738[286] = 1;
   out_5329286583971009738[287] = 0;
   out_5329286583971009738[288] = 0;
   out_5329286583971009738[289] = 0;
   out_5329286583971009738[290] = 0;
   out_5329286583971009738[291] = 0;
   out_5329286583971009738[292] = 0;
   out_5329286583971009738[293] = 0;
   out_5329286583971009738[294] = 0;
   out_5329286583971009738[295] = 0;
   out_5329286583971009738[296] = 0;
   out_5329286583971009738[297] = 0;
   out_5329286583971009738[298] = 0;
   out_5329286583971009738[299] = 0;
   out_5329286583971009738[300] = 0;
   out_5329286583971009738[301] = 0;
   out_5329286583971009738[302] = 0;
   out_5329286583971009738[303] = 0;
   out_5329286583971009738[304] = 0;
   out_5329286583971009738[305] = 0;
   out_5329286583971009738[306] = 0;
   out_5329286583971009738[307] = 0;
   out_5329286583971009738[308] = 1;
   out_5329286583971009738[309] = 0;
   out_5329286583971009738[310] = 0;
   out_5329286583971009738[311] = 0;
   out_5329286583971009738[312] = 0;
   out_5329286583971009738[313] = 0;
   out_5329286583971009738[314] = 0;
   out_5329286583971009738[315] = 0;
   out_5329286583971009738[316] = 0;
   out_5329286583971009738[317] = 0;
   out_5329286583971009738[318] = 0;
   out_5329286583971009738[319] = 0;
   out_5329286583971009738[320] = 0;
   out_5329286583971009738[321] = 0;
   out_5329286583971009738[322] = 0;
   out_5329286583971009738[323] = 0;
   out_5329286583971009738[324] = 0;
   out_5329286583971009738[325] = 0;
   out_5329286583971009738[326] = 0;
   out_5329286583971009738[327] = 0;
   out_5329286583971009738[328] = 0;
   out_5329286583971009738[329] = 0;
   out_5329286583971009738[330] = 1;
   out_5329286583971009738[331] = 0;
   out_5329286583971009738[332] = 0;
   out_5329286583971009738[333] = 0;
   out_5329286583971009738[334] = 0;
   out_5329286583971009738[335] = 0;
   out_5329286583971009738[336] = 0;
   out_5329286583971009738[337] = 0;
   out_5329286583971009738[338] = 0;
   out_5329286583971009738[339] = 0;
   out_5329286583971009738[340] = 0;
   out_5329286583971009738[341] = 0;
   out_5329286583971009738[342] = 0;
   out_5329286583971009738[343] = 0;
   out_5329286583971009738[344] = 0;
   out_5329286583971009738[345] = 0;
   out_5329286583971009738[346] = 0;
   out_5329286583971009738[347] = 0;
   out_5329286583971009738[348] = 0;
   out_5329286583971009738[349] = 0;
   out_5329286583971009738[350] = 0;
   out_5329286583971009738[351] = 0;
   out_5329286583971009738[352] = 1;
   out_5329286583971009738[353] = 0;
   out_5329286583971009738[354] = 0;
   out_5329286583971009738[355] = 0;
   out_5329286583971009738[356] = 0;
   out_5329286583971009738[357] = 0;
   out_5329286583971009738[358] = 0;
   out_5329286583971009738[359] = 0;
   out_5329286583971009738[360] = 0;
   out_5329286583971009738[361] = 0;
   out_5329286583971009738[362] = 0;
   out_5329286583971009738[363] = 0;
   out_5329286583971009738[364] = 0;
   out_5329286583971009738[365] = 0;
   out_5329286583971009738[366] = 0;
   out_5329286583971009738[367] = 0;
   out_5329286583971009738[368] = 0;
   out_5329286583971009738[369] = 0;
   out_5329286583971009738[370] = 0;
   out_5329286583971009738[371] = 0;
   out_5329286583971009738[372] = 0;
   out_5329286583971009738[373] = 0;
   out_5329286583971009738[374] = 1;
   out_5329286583971009738[375] = 0;
   out_5329286583971009738[376] = 0;
   out_5329286583971009738[377] = 0;
   out_5329286583971009738[378] = 0;
   out_5329286583971009738[379] = 0;
   out_5329286583971009738[380] = 0;
   out_5329286583971009738[381] = 0;
   out_5329286583971009738[382] = 0;
   out_5329286583971009738[383] = 0;
   out_5329286583971009738[384] = 0;
   out_5329286583971009738[385] = 0;
   out_5329286583971009738[386] = 0;
   out_5329286583971009738[387] = 0;
   out_5329286583971009738[388] = 0;
   out_5329286583971009738[389] = 0;
   out_5329286583971009738[390] = 0;
   out_5329286583971009738[391] = 0;
   out_5329286583971009738[392] = 0;
   out_5329286583971009738[393] = 0;
   out_5329286583971009738[394] = 0;
   out_5329286583971009738[395] = 0;
   out_5329286583971009738[396] = 1;
   out_5329286583971009738[397] = 0;
   out_5329286583971009738[398] = 0;
   out_5329286583971009738[399] = 0;
   out_5329286583971009738[400] = 0;
   out_5329286583971009738[401] = 0;
   out_5329286583971009738[402] = 0;
   out_5329286583971009738[403] = 0;
   out_5329286583971009738[404] = 0;
   out_5329286583971009738[405] = 0;
   out_5329286583971009738[406] = 0;
   out_5329286583971009738[407] = 0;
   out_5329286583971009738[408] = 0;
   out_5329286583971009738[409] = 0;
   out_5329286583971009738[410] = 0;
   out_5329286583971009738[411] = 0;
   out_5329286583971009738[412] = 0;
   out_5329286583971009738[413] = 0;
   out_5329286583971009738[414] = 0;
   out_5329286583971009738[415] = 0;
   out_5329286583971009738[416] = 0;
   out_5329286583971009738[417] = 0;
   out_5329286583971009738[418] = 1;
   out_5329286583971009738[419] = 0;
   out_5329286583971009738[420] = 0;
   out_5329286583971009738[421] = 0;
   out_5329286583971009738[422] = 0;
   out_5329286583971009738[423] = 0;
   out_5329286583971009738[424] = 0;
   out_5329286583971009738[425] = 0;
   out_5329286583971009738[426] = 0;
   out_5329286583971009738[427] = 0;
   out_5329286583971009738[428] = 0;
   out_5329286583971009738[429] = 0;
   out_5329286583971009738[430] = 0;
   out_5329286583971009738[431] = 0;
   out_5329286583971009738[432] = 0;
   out_5329286583971009738[433] = 0;
   out_5329286583971009738[434] = 0;
   out_5329286583971009738[435] = 0;
   out_5329286583971009738[436] = 0;
   out_5329286583971009738[437] = 0;
   out_5329286583971009738[438] = 0;
   out_5329286583971009738[439] = 0;
   out_5329286583971009738[440] = 1;
}
void h_4(double *state, double *unused, double *out_4155706609999190354) {
   out_4155706609999190354[0] = state[10] + state[13];
   out_4155706609999190354[1] = state[11] + state[14];
   out_4155706609999190354[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5339599855239346172) {
   out_5339599855239346172[0] = 0;
   out_5339599855239346172[1] = 0;
   out_5339599855239346172[2] = 0;
   out_5339599855239346172[3] = 0;
   out_5339599855239346172[4] = 0;
   out_5339599855239346172[5] = 0;
   out_5339599855239346172[6] = 0;
   out_5339599855239346172[7] = 0;
   out_5339599855239346172[8] = 0;
   out_5339599855239346172[9] = 0;
   out_5339599855239346172[10] = 1;
   out_5339599855239346172[11] = 0;
   out_5339599855239346172[12] = 0;
   out_5339599855239346172[13] = 1;
   out_5339599855239346172[14] = 0;
   out_5339599855239346172[15] = 0;
   out_5339599855239346172[16] = 0;
   out_5339599855239346172[17] = 0;
   out_5339599855239346172[18] = 0;
   out_5339599855239346172[19] = 0;
   out_5339599855239346172[20] = 0;
   out_5339599855239346172[21] = 0;
   out_5339599855239346172[22] = 0;
   out_5339599855239346172[23] = 0;
   out_5339599855239346172[24] = 0;
   out_5339599855239346172[25] = 0;
   out_5339599855239346172[26] = 0;
   out_5339599855239346172[27] = 0;
   out_5339599855239346172[28] = 0;
   out_5339599855239346172[29] = 0;
   out_5339599855239346172[30] = 0;
   out_5339599855239346172[31] = 0;
   out_5339599855239346172[32] = 0;
   out_5339599855239346172[33] = 1;
   out_5339599855239346172[34] = 0;
   out_5339599855239346172[35] = 0;
   out_5339599855239346172[36] = 1;
   out_5339599855239346172[37] = 0;
   out_5339599855239346172[38] = 0;
   out_5339599855239346172[39] = 0;
   out_5339599855239346172[40] = 0;
   out_5339599855239346172[41] = 0;
   out_5339599855239346172[42] = 0;
   out_5339599855239346172[43] = 0;
   out_5339599855239346172[44] = 0;
   out_5339599855239346172[45] = 0;
   out_5339599855239346172[46] = 0;
   out_5339599855239346172[47] = 0;
   out_5339599855239346172[48] = 0;
   out_5339599855239346172[49] = 0;
   out_5339599855239346172[50] = 0;
   out_5339599855239346172[51] = 0;
   out_5339599855239346172[52] = 0;
   out_5339599855239346172[53] = 0;
   out_5339599855239346172[54] = 0;
   out_5339599855239346172[55] = 0;
   out_5339599855239346172[56] = 1;
   out_5339599855239346172[57] = 0;
   out_5339599855239346172[58] = 0;
   out_5339599855239346172[59] = 1;
   out_5339599855239346172[60] = 0;
   out_5339599855239346172[61] = 0;
   out_5339599855239346172[62] = 0;
   out_5339599855239346172[63] = 0;
   out_5339599855239346172[64] = 0;
   out_5339599855239346172[65] = 0;
}
void h_9(double *state, double *unused, double *out_1429887674170277705) {
   out_1429887674170277705[0] = state[10];
   out_1429887674170277705[1] = state[11];
   out_1429887674170277705[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1947619080025101298) {
   out_1947619080025101298[0] = 0;
   out_1947619080025101298[1] = 0;
   out_1947619080025101298[2] = 0;
   out_1947619080025101298[3] = 0;
   out_1947619080025101298[4] = 0;
   out_1947619080025101298[5] = 0;
   out_1947619080025101298[6] = 0;
   out_1947619080025101298[7] = 0;
   out_1947619080025101298[8] = 0;
   out_1947619080025101298[9] = 0;
   out_1947619080025101298[10] = 1;
   out_1947619080025101298[11] = 0;
   out_1947619080025101298[12] = 0;
   out_1947619080025101298[13] = 0;
   out_1947619080025101298[14] = 0;
   out_1947619080025101298[15] = 0;
   out_1947619080025101298[16] = 0;
   out_1947619080025101298[17] = 0;
   out_1947619080025101298[18] = 0;
   out_1947619080025101298[19] = 0;
   out_1947619080025101298[20] = 0;
   out_1947619080025101298[21] = 0;
   out_1947619080025101298[22] = 0;
   out_1947619080025101298[23] = 0;
   out_1947619080025101298[24] = 0;
   out_1947619080025101298[25] = 0;
   out_1947619080025101298[26] = 0;
   out_1947619080025101298[27] = 0;
   out_1947619080025101298[28] = 0;
   out_1947619080025101298[29] = 0;
   out_1947619080025101298[30] = 0;
   out_1947619080025101298[31] = 0;
   out_1947619080025101298[32] = 0;
   out_1947619080025101298[33] = 1;
   out_1947619080025101298[34] = 0;
   out_1947619080025101298[35] = 0;
   out_1947619080025101298[36] = 0;
   out_1947619080025101298[37] = 0;
   out_1947619080025101298[38] = 0;
   out_1947619080025101298[39] = 0;
   out_1947619080025101298[40] = 0;
   out_1947619080025101298[41] = 0;
   out_1947619080025101298[42] = 0;
   out_1947619080025101298[43] = 0;
   out_1947619080025101298[44] = 0;
   out_1947619080025101298[45] = 0;
   out_1947619080025101298[46] = 0;
   out_1947619080025101298[47] = 0;
   out_1947619080025101298[48] = 0;
   out_1947619080025101298[49] = 0;
   out_1947619080025101298[50] = 0;
   out_1947619080025101298[51] = 0;
   out_1947619080025101298[52] = 0;
   out_1947619080025101298[53] = 0;
   out_1947619080025101298[54] = 0;
   out_1947619080025101298[55] = 0;
   out_1947619080025101298[56] = 1;
   out_1947619080025101298[57] = 0;
   out_1947619080025101298[58] = 0;
   out_1947619080025101298[59] = 0;
   out_1947619080025101298[60] = 0;
   out_1947619080025101298[61] = 0;
   out_1947619080025101298[62] = 0;
   out_1947619080025101298[63] = 0;
   out_1947619080025101298[64] = 0;
   out_1947619080025101298[65] = 0;
}
void h_10(double *state, double *unused, double *out_84592872543830086) {
   out_84592872543830086[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_84592872543830086[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_84592872543830086[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8116331784126176044) {
   out_8116331784126176044[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8116331784126176044[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8116331784126176044[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8116331784126176044[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8116331784126176044[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8116331784126176044[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8116331784126176044[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8116331784126176044[7] = 0;
   out_8116331784126176044[8] = 0;
   out_8116331784126176044[9] = 0;
   out_8116331784126176044[10] = 0;
   out_8116331784126176044[11] = 0;
   out_8116331784126176044[12] = 0;
   out_8116331784126176044[13] = 0;
   out_8116331784126176044[14] = 0;
   out_8116331784126176044[15] = 0;
   out_8116331784126176044[16] = 1;
   out_8116331784126176044[17] = 0;
   out_8116331784126176044[18] = 0;
   out_8116331784126176044[19] = 1;
   out_8116331784126176044[20] = 0;
   out_8116331784126176044[21] = 0;
   out_8116331784126176044[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8116331784126176044[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8116331784126176044[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8116331784126176044[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8116331784126176044[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8116331784126176044[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8116331784126176044[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8116331784126176044[29] = 0;
   out_8116331784126176044[30] = 0;
   out_8116331784126176044[31] = 0;
   out_8116331784126176044[32] = 0;
   out_8116331784126176044[33] = 0;
   out_8116331784126176044[34] = 0;
   out_8116331784126176044[35] = 0;
   out_8116331784126176044[36] = 0;
   out_8116331784126176044[37] = 0;
   out_8116331784126176044[38] = 0;
   out_8116331784126176044[39] = 1;
   out_8116331784126176044[40] = 0;
   out_8116331784126176044[41] = 0;
   out_8116331784126176044[42] = 1;
   out_8116331784126176044[43] = 0;
   out_8116331784126176044[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8116331784126176044[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8116331784126176044[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8116331784126176044[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8116331784126176044[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8116331784126176044[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8116331784126176044[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8116331784126176044[51] = 0;
   out_8116331784126176044[52] = 0;
   out_8116331784126176044[53] = 0;
   out_8116331784126176044[54] = 0;
   out_8116331784126176044[55] = 0;
   out_8116331784126176044[56] = 0;
   out_8116331784126176044[57] = 0;
   out_8116331784126176044[58] = 0;
   out_8116331784126176044[59] = 0;
   out_8116331784126176044[60] = 0;
   out_8116331784126176044[61] = 0;
   out_8116331784126176044[62] = 1;
   out_8116331784126176044[63] = 0;
   out_8116331784126176044[64] = 0;
   out_8116331784126176044[65] = 1;
}
void h_12(double *state, double *unused, double *out_5853750055083503413) {
   out_5853750055083503413[0] = state[0];
   out_5853750055083503413[1] = state[1];
   out_5853750055083503413[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6725885841427472448) {
   out_6725885841427472448[0] = 1;
   out_6725885841427472448[1] = 0;
   out_6725885841427472448[2] = 0;
   out_6725885841427472448[3] = 0;
   out_6725885841427472448[4] = 0;
   out_6725885841427472448[5] = 0;
   out_6725885841427472448[6] = 0;
   out_6725885841427472448[7] = 0;
   out_6725885841427472448[8] = 0;
   out_6725885841427472448[9] = 0;
   out_6725885841427472448[10] = 0;
   out_6725885841427472448[11] = 0;
   out_6725885841427472448[12] = 0;
   out_6725885841427472448[13] = 0;
   out_6725885841427472448[14] = 0;
   out_6725885841427472448[15] = 0;
   out_6725885841427472448[16] = 0;
   out_6725885841427472448[17] = 0;
   out_6725885841427472448[18] = 0;
   out_6725885841427472448[19] = 0;
   out_6725885841427472448[20] = 0;
   out_6725885841427472448[21] = 0;
   out_6725885841427472448[22] = 0;
   out_6725885841427472448[23] = 1;
   out_6725885841427472448[24] = 0;
   out_6725885841427472448[25] = 0;
   out_6725885841427472448[26] = 0;
   out_6725885841427472448[27] = 0;
   out_6725885841427472448[28] = 0;
   out_6725885841427472448[29] = 0;
   out_6725885841427472448[30] = 0;
   out_6725885841427472448[31] = 0;
   out_6725885841427472448[32] = 0;
   out_6725885841427472448[33] = 0;
   out_6725885841427472448[34] = 0;
   out_6725885841427472448[35] = 0;
   out_6725885841427472448[36] = 0;
   out_6725885841427472448[37] = 0;
   out_6725885841427472448[38] = 0;
   out_6725885841427472448[39] = 0;
   out_6725885841427472448[40] = 0;
   out_6725885841427472448[41] = 0;
   out_6725885841427472448[42] = 0;
   out_6725885841427472448[43] = 0;
   out_6725885841427472448[44] = 0;
   out_6725885841427472448[45] = 0;
   out_6725885841427472448[46] = 1;
   out_6725885841427472448[47] = 0;
   out_6725885841427472448[48] = 0;
   out_6725885841427472448[49] = 0;
   out_6725885841427472448[50] = 0;
   out_6725885841427472448[51] = 0;
   out_6725885841427472448[52] = 0;
   out_6725885841427472448[53] = 0;
   out_6725885841427472448[54] = 0;
   out_6725885841427472448[55] = 0;
   out_6725885841427472448[56] = 0;
   out_6725885841427472448[57] = 0;
   out_6725885841427472448[58] = 0;
   out_6725885841427472448[59] = 0;
   out_6725885841427472448[60] = 0;
   out_6725885841427472448[61] = 0;
   out_6725885841427472448[62] = 0;
   out_6725885841427472448[63] = 0;
   out_6725885841427472448[64] = 0;
   out_6725885841427472448[65] = 0;
}
void h_31(double *state, double *unused, double *out_6772459046034304281) {
   out_6772459046034304281[0] = state[7];
   out_6772459046034304281[1] = state[8];
   out_6772459046034304281[2] = state[9];
}
void H_31(double *state, double *unused, double *out_8975295199957065459) {
   out_8975295199957065459[0] = 0;
   out_8975295199957065459[1] = 0;
   out_8975295199957065459[2] = 0;
   out_8975295199957065459[3] = 0;
   out_8975295199957065459[4] = 0;
   out_8975295199957065459[5] = 0;
   out_8975295199957065459[6] = 0;
   out_8975295199957065459[7] = 1;
   out_8975295199957065459[8] = 0;
   out_8975295199957065459[9] = 0;
   out_8975295199957065459[10] = 0;
   out_8975295199957065459[11] = 0;
   out_8975295199957065459[12] = 0;
   out_8975295199957065459[13] = 0;
   out_8975295199957065459[14] = 0;
   out_8975295199957065459[15] = 0;
   out_8975295199957065459[16] = 0;
   out_8975295199957065459[17] = 0;
   out_8975295199957065459[18] = 0;
   out_8975295199957065459[19] = 0;
   out_8975295199957065459[20] = 0;
   out_8975295199957065459[21] = 0;
   out_8975295199957065459[22] = 0;
   out_8975295199957065459[23] = 0;
   out_8975295199957065459[24] = 0;
   out_8975295199957065459[25] = 0;
   out_8975295199957065459[26] = 0;
   out_8975295199957065459[27] = 0;
   out_8975295199957065459[28] = 0;
   out_8975295199957065459[29] = 0;
   out_8975295199957065459[30] = 1;
   out_8975295199957065459[31] = 0;
   out_8975295199957065459[32] = 0;
   out_8975295199957065459[33] = 0;
   out_8975295199957065459[34] = 0;
   out_8975295199957065459[35] = 0;
   out_8975295199957065459[36] = 0;
   out_8975295199957065459[37] = 0;
   out_8975295199957065459[38] = 0;
   out_8975295199957065459[39] = 0;
   out_8975295199957065459[40] = 0;
   out_8975295199957065459[41] = 0;
   out_8975295199957065459[42] = 0;
   out_8975295199957065459[43] = 0;
   out_8975295199957065459[44] = 0;
   out_8975295199957065459[45] = 0;
   out_8975295199957065459[46] = 0;
   out_8975295199957065459[47] = 0;
   out_8975295199957065459[48] = 0;
   out_8975295199957065459[49] = 0;
   out_8975295199957065459[50] = 0;
   out_8975295199957065459[51] = 0;
   out_8975295199957065459[52] = 0;
   out_8975295199957065459[53] = 1;
   out_8975295199957065459[54] = 0;
   out_8975295199957065459[55] = 0;
   out_8975295199957065459[56] = 0;
   out_8975295199957065459[57] = 0;
   out_8975295199957065459[58] = 0;
   out_8975295199957065459[59] = 0;
   out_8975295199957065459[60] = 0;
   out_8975295199957065459[61] = 0;
   out_8975295199957065459[62] = 0;
   out_8975295199957065459[63] = 0;
   out_8975295199957065459[64] = 0;
   out_8975295199957065459[65] = 0;
}
void h_32(double *state, double *unused, double *out_209189202375476947) {
   out_209189202375476947[0] = state[3];
   out_209189202375476947[1] = state[4];
   out_209189202375476947[2] = state[5];
   out_209189202375476947[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3173990827749452901) {
   out_3173990827749452901[0] = 0;
   out_3173990827749452901[1] = 0;
   out_3173990827749452901[2] = 0;
   out_3173990827749452901[3] = 1;
   out_3173990827749452901[4] = 0;
   out_3173990827749452901[5] = 0;
   out_3173990827749452901[6] = 0;
   out_3173990827749452901[7] = 0;
   out_3173990827749452901[8] = 0;
   out_3173990827749452901[9] = 0;
   out_3173990827749452901[10] = 0;
   out_3173990827749452901[11] = 0;
   out_3173990827749452901[12] = 0;
   out_3173990827749452901[13] = 0;
   out_3173990827749452901[14] = 0;
   out_3173990827749452901[15] = 0;
   out_3173990827749452901[16] = 0;
   out_3173990827749452901[17] = 0;
   out_3173990827749452901[18] = 0;
   out_3173990827749452901[19] = 0;
   out_3173990827749452901[20] = 0;
   out_3173990827749452901[21] = 0;
   out_3173990827749452901[22] = 0;
   out_3173990827749452901[23] = 0;
   out_3173990827749452901[24] = 0;
   out_3173990827749452901[25] = 0;
   out_3173990827749452901[26] = 1;
   out_3173990827749452901[27] = 0;
   out_3173990827749452901[28] = 0;
   out_3173990827749452901[29] = 0;
   out_3173990827749452901[30] = 0;
   out_3173990827749452901[31] = 0;
   out_3173990827749452901[32] = 0;
   out_3173990827749452901[33] = 0;
   out_3173990827749452901[34] = 0;
   out_3173990827749452901[35] = 0;
   out_3173990827749452901[36] = 0;
   out_3173990827749452901[37] = 0;
   out_3173990827749452901[38] = 0;
   out_3173990827749452901[39] = 0;
   out_3173990827749452901[40] = 0;
   out_3173990827749452901[41] = 0;
   out_3173990827749452901[42] = 0;
   out_3173990827749452901[43] = 0;
   out_3173990827749452901[44] = 0;
   out_3173990827749452901[45] = 0;
   out_3173990827749452901[46] = 0;
   out_3173990827749452901[47] = 0;
   out_3173990827749452901[48] = 0;
   out_3173990827749452901[49] = 1;
   out_3173990827749452901[50] = 0;
   out_3173990827749452901[51] = 0;
   out_3173990827749452901[52] = 0;
   out_3173990827749452901[53] = 0;
   out_3173990827749452901[54] = 0;
   out_3173990827749452901[55] = 0;
   out_3173990827749452901[56] = 0;
   out_3173990827749452901[57] = 0;
   out_3173990827749452901[58] = 0;
   out_3173990827749452901[59] = 0;
   out_3173990827749452901[60] = 0;
   out_3173990827749452901[61] = 0;
   out_3173990827749452901[62] = 0;
   out_3173990827749452901[63] = 0;
   out_3173990827749452901[64] = 0;
   out_3173990827749452901[65] = 0;
   out_3173990827749452901[66] = 0;
   out_3173990827749452901[67] = 0;
   out_3173990827749452901[68] = 0;
   out_3173990827749452901[69] = 0;
   out_3173990827749452901[70] = 0;
   out_3173990827749452901[71] = 0;
   out_3173990827749452901[72] = 1;
   out_3173990827749452901[73] = 0;
   out_3173990827749452901[74] = 0;
   out_3173990827749452901[75] = 0;
   out_3173990827749452901[76] = 0;
   out_3173990827749452901[77] = 0;
   out_3173990827749452901[78] = 0;
   out_3173990827749452901[79] = 0;
   out_3173990827749452901[80] = 0;
   out_3173990827749452901[81] = 0;
   out_3173990827749452901[82] = 0;
   out_3173990827749452901[83] = 0;
   out_3173990827749452901[84] = 0;
   out_3173990827749452901[85] = 0;
   out_3173990827749452901[86] = 0;
   out_3173990827749452901[87] = 0;
}
void h_13(double *state, double *unused, double *out_6889798033787065432) {
   out_6889798033787065432[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6889798033787065432[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6889798033787065432[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_535304116827451560) {
   out_535304116827451560[0] = 0;
   out_535304116827451560[1] = 0;
   out_535304116827451560[2] = 0;
   out_535304116827451560[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_535304116827451560[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_535304116827451560[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_535304116827451560[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_535304116827451560[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_535304116827451560[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_535304116827451560[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_535304116827451560[10] = 0;
   out_535304116827451560[11] = 0;
   out_535304116827451560[12] = 0;
   out_535304116827451560[13] = 0;
   out_535304116827451560[14] = 0;
   out_535304116827451560[15] = 0;
   out_535304116827451560[16] = 0;
   out_535304116827451560[17] = 0;
   out_535304116827451560[18] = 0;
   out_535304116827451560[19] = 0;
   out_535304116827451560[20] = 0;
   out_535304116827451560[21] = 0;
   out_535304116827451560[22] = 0;
   out_535304116827451560[23] = 0;
   out_535304116827451560[24] = 0;
   out_535304116827451560[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_535304116827451560[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_535304116827451560[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_535304116827451560[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_535304116827451560[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_535304116827451560[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_535304116827451560[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_535304116827451560[32] = 0;
   out_535304116827451560[33] = 0;
   out_535304116827451560[34] = 0;
   out_535304116827451560[35] = 0;
   out_535304116827451560[36] = 0;
   out_535304116827451560[37] = 0;
   out_535304116827451560[38] = 0;
   out_535304116827451560[39] = 0;
   out_535304116827451560[40] = 0;
   out_535304116827451560[41] = 0;
   out_535304116827451560[42] = 0;
   out_535304116827451560[43] = 0;
   out_535304116827451560[44] = 0;
   out_535304116827451560[45] = 0;
   out_535304116827451560[46] = 0;
   out_535304116827451560[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_535304116827451560[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_535304116827451560[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_535304116827451560[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_535304116827451560[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_535304116827451560[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_535304116827451560[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_535304116827451560[54] = 0;
   out_535304116827451560[55] = 0;
   out_535304116827451560[56] = 0;
   out_535304116827451560[57] = 0;
   out_535304116827451560[58] = 0;
   out_535304116827451560[59] = 0;
   out_535304116827451560[60] = 0;
   out_535304116827451560[61] = 0;
   out_535304116827451560[62] = 0;
   out_535304116827451560[63] = 0;
   out_535304116827451560[64] = 0;
   out_535304116827451560[65] = 0;
}
void h_14(double *state, double *unused, double *out_1429887674170277705) {
   out_1429887674170277705[0] = state[10];
   out_1429887674170277705[1] = state[11];
   out_1429887674170277705[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1947619080025101298) {
   out_1947619080025101298[0] = 0;
   out_1947619080025101298[1] = 0;
   out_1947619080025101298[2] = 0;
   out_1947619080025101298[3] = 0;
   out_1947619080025101298[4] = 0;
   out_1947619080025101298[5] = 0;
   out_1947619080025101298[6] = 0;
   out_1947619080025101298[7] = 0;
   out_1947619080025101298[8] = 0;
   out_1947619080025101298[9] = 0;
   out_1947619080025101298[10] = 1;
   out_1947619080025101298[11] = 0;
   out_1947619080025101298[12] = 0;
   out_1947619080025101298[13] = 0;
   out_1947619080025101298[14] = 0;
   out_1947619080025101298[15] = 0;
   out_1947619080025101298[16] = 0;
   out_1947619080025101298[17] = 0;
   out_1947619080025101298[18] = 0;
   out_1947619080025101298[19] = 0;
   out_1947619080025101298[20] = 0;
   out_1947619080025101298[21] = 0;
   out_1947619080025101298[22] = 0;
   out_1947619080025101298[23] = 0;
   out_1947619080025101298[24] = 0;
   out_1947619080025101298[25] = 0;
   out_1947619080025101298[26] = 0;
   out_1947619080025101298[27] = 0;
   out_1947619080025101298[28] = 0;
   out_1947619080025101298[29] = 0;
   out_1947619080025101298[30] = 0;
   out_1947619080025101298[31] = 0;
   out_1947619080025101298[32] = 0;
   out_1947619080025101298[33] = 1;
   out_1947619080025101298[34] = 0;
   out_1947619080025101298[35] = 0;
   out_1947619080025101298[36] = 0;
   out_1947619080025101298[37] = 0;
   out_1947619080025101298[38] = 0;
   out_1947619080025101298[39] = 0;
   out_1947619080025101298[40] = 0;
   out_1947619080025101298[41] = 0;
   out_1947619080025101298[42] = 0;
   out_1947619080025101298[43] = 0;
   out_1947619080025101298[44] = 0;
   out_1947619080025101298[45] = 0;
   out_1947619080025101298[46] = 0;
   out_1947619080025101298[47] = 0;
   out_1947619080025101298[48] = 0;
   out_1947619080025101298[49] = 0;
   out_1947619080025101298[50] = 0;
   out_1947619080025101298[51] = 0;
   out_1947619080025101298[52] = 0;
   out_1947619080025101298[53] = 0;
   out_1947619080025101298[54] = 0;
   out_1947619080025101298[55] = 0;
   out_1947619080025101298[56] = 1;
   out_1947619080025101298[57] = 0;
   out_1947619080025101298[58] = 0;
   out_1947619080025101298[59] = 0;
   out_1947619080025101298[60] = 0;
   out_1947619080025101298[61] = 0;
   out_1947619080025101298[62] = 0;
   out_1947619080025101298[63] = 0;
   out_1947619080025101298[64] = 0;
   out_1947619080025101298[65] = 0;
}
void h_33(double *state, double *unused, double *out_2022710884799879907) {
   out_2022710884799879907[0] = state[16];
   out_2022710884799879907[1] = state[17];
   out_2022710884799879907[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5824738195318207855) {
   out_5824738195318207855[0] = 0;
   out_5824738195318207855[1] = 0;
   out_5824738195318207855[2] = 0;
   out_5824738195318207855[3] = 0;
   out_5824738195318207855[4] = 0;
   out_5824738195318207855[5] = 0;
   out_5824738195318207855[6] = 0;
   out_5824738195318207855[7] = 0;
   out_5824738195318207855[8] = 0;
   out_5824738195318207855[9] = 0;
   out_5824738195318207855[10] = 0;
   out_5824738195318207855[11] = 0;
   out_5824738195318207855[12] = 0;
   out_5824738195318207855[13] = 0;
   out_5824738195318207855[14] = 0;
   out_5824738195318207855[15] = 0;
   out_5824738195318207855[16] = 1;
   out_5824738195318207855[17] = 0;
   out_5824738195318207855[18] = 0;
   out_5824738195318207855[19] = 0;
   out_5824738195318207855[20] = 0;
   out_5824738195318207855[21] = 0;
   out_5824738195318207855[22] = 0;
   out_5824738195318207855[23] = 0;
   out_5824738195318207855[24] = 0;
   out_5824738195318207855[25] = 0;
   out_5824738195318207855[26] = 0;
   out_5824738195318207855[27] = 0;
   out_5824738195318207855[28] = 0;
   out_5824738195318207855[29] = 0;
   out_5824738195318207855[30] = 0;
   out_5824738195318207855[31] = 0;
   out_5824738195318207855[32] = 0;
   out_5824738195318207855[33] = 0;
   out_5824738195318207855[34] = 0;
   out_5824738195318207855[35] = 0;
   out_5824738195318207855[36] = 0;
   out_5824738195318207855[37] = 0;
   out_5824738195318207855[38] = 0;
   out_5824738195318207855[39] = 1;
   out_5824738195318207855[40] = 0;
   out_5824738195318207855[41] = 0;
   out_5824738195318207855[42] = 0;
   out_5824738195318207855[43] = 0;
   out_5824738195318207855[44] = 0;
   out_5824738195318207855[45] = 0;
   out_5824738195318207855[46] = 0;
   out_5824738195318207855[47] = 0;
   out_5824738195318207855[48] = 0;
   out_5824738195318207855[49] = 0;
   out_5824738195318207855[50] = 0;
   out_5824738195318207855[51] = 0;
   out_5824738195318207855[52] = 0;
   out_5824738195318207855[53] = 0;
   out_5824738195318207855[54] = 0;
   out_5824738195318207855[55] = 0;
   out_5824738195318207855[56] = 0;
   out_5824738195318207855[57] = 0;
   out_5824738195318207855[58] = 0;
   out_5824738195318207855[59] = 0;
   out_5824738195318207855[60] = 0;
   out_5824738195318207855[61] = 0;
   out_5824738195318207855[62] = 1;
   out_5824738195318207855[63] = 0;
   out_5824738195318207855[64] = 0;
   out_5824738195318207855[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7089917002068737761) {
  H(in_vec, out_7089917002068737761);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5097557166370017434) {
  err_fun(nom_x, delta_x, out_5097557166370017434);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2500389703739010254) {
  inv_err_fun(nom_x, true_x, out_2500389703739010254);
}
void live_H_mod_fun(double *state, double *out_8605363687855840588) {
  H_mod_fun(state, out_8605363687855840588);
}
void live_f_fun(double *state, double dt, double *out_7196605423571964472) {
  f_fun(state,  dt, out_7196605423571964472);
}
void live_F_fun(double *state, double dt, double *out_5329286583971009738) {
  F_fun(state,  dt, out_5329286583971009738);
}
void live_h_4(double *state, double *unused, double *out_4155706609999190354) {
  h_4(state, unused, out_4155706609999190354);
}
void live_H_4(double *state, double *unused, double *out_5339599855239346172) {
  H_4(state, unused, out_5339599855239346172);
}
void live_h_9(double *state, double *unused, double *out_1429887674170277705) {
  h_9(state, unused, out_1429887674170277705);
}
void live_H_9(double *state, double *unused, double *out_1947619080025101298) {
  H_9(state, unused, out_1947619080025101298);
}
void live_h_10(double *state, double *unused, double *out_84592872543830086) {
  h_10(state, unused, out_84592872543830086);
}
void live_H_10(double *state, double *unused, double *out_8116331784126176044) {
  H_10(state, unused, out_8116331784126176044);
}
void live_h_12(double *state, double *unused, double *out_5853750055083503413) {
  h_12(state, unused, out_5853750055083503413);
}
void live_H_12(double *state, double *unused, double *out_6725885841427472448) {
  H_12(state, unused, out_6725885841427472448);
}
void live_h_31(double *state, double *unused, double *out_6772459046034304281) {
  h_31(state, unused, out_6772459046034304281);
}
void live_H_31(double *state, double *unused, double *out_8975295199957065459) {
  H_31(state, unused, out_8975295199957065459);
}
void live_h_32(double *state, double *unused, double *out_209189202375476947) {
  h_32(state, unused, out_209189202375476947);
}
void live_H_32(double *state, double *unused, double *out_3173990827749452901) {
  H_32(state, unused, out_3173990827749452901);
}
void live_h_13(double *state, double *unused, double *out_6889798033787065432) {
  h_13(state, unused, out_6889798033787065432);
}
void live_H_13(double *state, double *unused, double *out_535304116827451560) {
  H_13(state, unused, out_535304116827451560);
}
void live_h_14(double *state, double *unused, double *out_1429887674170277705) {
  h_14(state, unused, out_1429887674170277705);
}
void live_H_14(double *state, double *unused, double *out_1947619080025101298) {
  H_14(state, unused, out_1947619080025101298);
}
void live_h_33(double *state, double *unused, double *out_2022710884799879907) {
  h_33(state, unused, out_2022710884799879907);
}
void live_H_33(double *state, double *unused, double *out_5824738195318207855) {
  H_33(state, unused, out_5824738195318207855);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
